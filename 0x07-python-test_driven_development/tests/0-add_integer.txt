============================
How to use 0-add_integer.py
============================

This function ``add_integer(a, b = 98)`` is used to add two integers together.

Usage
=======

First, we import the add_integer function.

::
	>>> add_integer = __import__('0-add_integer').add_integer

Now we test the function.

::
	>>> result = add_integer(1, 2)
	>>> print(result)
	3
	>>> print(add_integer(100, -2))
	98
	>>> print(add_integer(2))
	100
	>>> print(add_integer(100.3, -2))
	98

====================================================================
Checking for string or any other datatype aside an integer or float.
====================================================================

::
	>>> try:
	...    print(add_integer(4, "School"))
	... except Exception as e:
	...    print(e)
	b must be an integer

::
	>>> try:
    	...    print(add_integer(None))
	... except Exception as e:
	...    print(e)
	a must be an integer

::

	>>> try:
	...    print(add_integer(a, 4))
	... except Exception as e:
	...    print(e)
	name 'a' is not defined

::

	>>> try:
	...    print(add_integer(4, b))
	... except Exception as e:
	...    print(e)
	name 'b' is not defined
	
::

	>>> a = float("inf")
	>>> b = 10
	>>> add_integer(a, b)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

::

	>>> add_integer(5.5, 2.5)
        7
        >>> add_integer(0.1, 0.2)
        0
        >>> add_integer(-10, -5)
        -15

::

	>> add_integer(999999999, 1)
        1000000000
        >>> add_integer(-999999999, -1)
        -1000000000

::

	>>> add_integer(0)
        98
        >>> add_integer(0, 0)
        0
        >>> add_integer(1, 0)
        1
        >>> add_integer(-1, 1)
        0
